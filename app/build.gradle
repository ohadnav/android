apply plugin: "com.android.application"

android {
  compileSdkVersion rootProject.ext.compileSdkVersion
  buildToolsVersion rootProject.ext.buildToolsVersion
  defaultConfig {
    applicationId "com.truethat.android"
    minSdkVersion rootProject.ext.minSdkVersion
    //noinspection OldTargetApi
    targetSdkVersion rootProject.ext.targetSdkVersion
    versionCode buildVersionCode()
    versionName version
    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    multiDexEnabled true
  }
  testOptions {
    unitTests.returnDefaultValues = true
  }
  dataBinding {
    enabled = true
  }
  buildTypes {
    debug {
      buildConfigField "String", "BASE_BACKEND_URL", '"http://10.0.0.27:8080/"'
      buildConfigField "String", "EMULATOR_BASE_BACKEND_URL", '"http://10.0.2.2:8080/"'
      buildConfigField "String", "TEST_BASE_BACKEND_URL", '"http://localhost:8070/"'
      applicationIdSuffix ".debug"
    }
    release {
      minifyEnabled true
      zipAlignEnabled true
      proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
      buildConfigField "String", "BASE_BACKEND_URL", '"https://truethat-app.appspot.com/"'
    }
    // For beta testing in the PlayStore.
    beta {
      initWith release
      buildConfigField "String", "BASE_BACKEND_URL", '"https://truethat-staging.appspot.com/"'
      versionNameSuffix "-beta"
    }
  }
}

dependencies {
  compile fileTree(include: ["*.jar"], dir: "libs")
  compile "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"
  compile "com.android.support.constraint:constraint-layout:$rootProject.constraintLayoutVersion"
  compile "com.google.code.findbugs:jsr305:$rootProject.findBugsVersion"
  compile "com.google.guava:guava:$rootProject.guavaVersion"
  compile "com.squareup.okhttp3:okhttp:$rootProject.okhttpVersion"
  compile("com.squareup.retrofit2:retrofit:$rootProject.retrofitVersion") {
    exclude group: "com.squareup.okhttp3", module: "okhttp"
  }
  compile "com.squareup.retrofit2:converter-gson:$rootProject.retrofitVersion"
  compile "com.github.bumptech.glide:glide:$rootProject.glideVersion"
  compile "eu.inloop:androidviewmodel:$rootProject.inloopMvvmVersion"
  compile "com.jakewharton:butterknife:$rootProject.butterKnifeVersion"
  annotationProcessor "com.jakewharton:butterknife-compiler:$rootProject.butterKnifeVersion"
  testCompile "junit:junit:$rootProject.junitVersion"
  testCompile("com.squareup.okhttp3:mockwebserver:$rootProject.mockWebServerVersion") {
    exclude module: "okhttp"
  }
  testCompile "org.awaitility:awaitility:$rootProject.awaitilityVersion"
  testCompile "org.mockito:mockito-core:$rootProject.mockitoVersion"
  androidTestCompile("com.squareup.okhttp3:mockwebserver:$rootProject.mockWebServerVersion") {
    exclude module: "okhttp"
  }
  androidTestCompile "org.mockito:mockito-android:$rootProject.mockitoAndroidVersion"
  androidTestCompile "com.android.support.test.uiautomator:uiautomator-v18:$rootProject.uiAutomatorVersion"
  androidTestCompile "org.awaitility:awaitility:$rootProject.awaitilityVersion"
  androidTestCompile("com.android.support.test.espresso:espresso-core:$rootProject.espressoVersion",
      {
        exclude group: "com.android.support", module: "support-annotations"
        exclude group: "junit", module: "junit"
        exclude group: "com.google.code.findbugs", module: "jsr305"
      })
  androidTestCompile(
      "com.android.support.test.espresso:espresso-intents:$rootProject.espressoVersion", {
    exclude group: "com.android.support", module: "support-annotations"
    exclude group: "com.google.code.findbugs", module: "jsr305"
  })

  compile "com.affectiva.android:affdexsdk:$rootProject.affectivaVersion"
}

apply from: "../artifacts.gradle"
